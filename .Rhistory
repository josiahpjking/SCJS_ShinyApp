unique() %>%
as.character()
}
#variables/variable groupings
all_vars<-list('National Indicators'= getnames("PREVSURVEY|QS2AREA:|DCONF_03"),
'Rates of Crime Victimisation'=getnames("PREV"),
'Confidence in the Police'=getnames("POLCONF|RATPOL"),
'Attitudes to the Police'=getnames("POLOP|POLPRES"),
'Confidence in Scottish Criminal Justice System'=getnames("DCONF"),
'Perceptions of Crime Rates and Fear of Crime'=getnames("QS"),
'Perceptions of Local Crime'=getnames("QACO"),
'Perceptions of Local Community'=getnames("LCPEOP"),
'Worries of Crime Victimisation'=getnames("QWORR"),
'Worries of Being Harassed'=getnames("HWORR")
)
#now overwrite variable with more user-friendly input
df$variable<-df$name_trunc
######## map data ##########
pd_latlon <- readRDS("data/pd_mapdata.RDS")
############ save Rdata to the app directory ############
ungroup(df) -> df
#update the app data.
save.image(file = "./app/.RData")
#packages needed
require(tidyr)
require(dplyr)
require(ggplot2)
require(magrittr)
require(plotly)
#load in functions
source("functions/extract_name_data.R")
source("functions/load_scjs_data.R")
source("functions/rowSums_na.R")
source("functions/rowsum_partialstringmatch_variables.R")
df<-readRDS("data/pdiv10.1.rds")
#police division colours
pdivcols=c("Argyll & West Dunbartonshire (L Division)"='#E41A1C',
"Ayrshire (U Division)"='#377EB8',
"Dumfries & Galloway (V Division)"='#4DAF4A',
"Edinburgh City (E Division)"='#984EA3',
"Fife (P Division)"='#FF7F00',
"Forth Valley (C Division)"='#FFFF33',
"Greater Glasgow (G Division)"='#A65628',
"Highlands & Islands (N Division)"='#F781BF',
"Lanarkshire (Q Division)"='#1B9E77',
"Lothians & Scottish Borders (J Division)"='#D95F02',
"North East (A Division)"='#7570B3',
"Renfrewshire & Inverclyde (K Division)"='#66A61E',
"Tayside (D Division)"='#E6AB02',
"National Average"='#000000')
#colours for overview page (national avg = black, and better/worse/none is included)
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#95fb71",
"Less Positive"="#fb7171")
#modebar icons to remove (these are the little buttons on the plots.)
modebar_remove <- c('hoverClosestCartesian','hoverCompareCartesian','zoom2d','pan2d','toggleSpikelines','select2d','lasso2d','zoomIn2d','zoomOut2d')
#app-user inputs. (these are the choices users will get to select from)
des_factor <- df %>% group_by(year) %>% summarise(des_f=first(des_fact)) #design factors
pdivis<-levels(factor(df$police_div)) #police divisions
years=levels(df$year) #years
currentyear=years[length(years)] #latest survey year
prevyear=years[length(years)-1] #previous survey year
firstyear=years[1] #first survey year
yn<-c("Yes","No") #yes no choices
getnames<-function(string){
df %>%
filter(grepl(string,variable)) %>%
pull(name_trunc) %>%
unique() %>%
as.character()
}
#variables/variable groupings
all_vars<-list('National Indicators'= getnames("PREVSURVEY|QS2AREA:|DCONF_03"),
'Rates of Crime Victimisation'=getnames("PREV"),
'Confidence in the Police'=getnames("POLCONF|RATPOL"),
'Attitudes to the Police'=getnames("POLOP|POLPRES"),
'Confidence in Scottish Criminal Justice System'=getnames("DCONF"),
'Perceptions of Crime Rates and Fear of Crime'=getnames("QS"),
'Perceptions of Local Crime'=getnames("QACO"),
'Perceptions of Local Community'=getnames("LCPEOP"),
'Worries of Crime Victimisation'=getnames("QWORR"),
'Worries of Being Harassed'=getnames("HWORR")
)
#now overwrite variable with more user-friendly input
df$variable<-df$name_trunc
######## map data ##########
pd_latlon <- readRDS("data/pd_mapdata.RDS")
############ save Rdata to the app directory ############
ungroup(df) -> df
#update the app data.
save.image(file = "./app/.RData")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
View(df)
df %>% mutate()
df %>% mutate(name_trunc = gsub(" including attempted assault","",name_trunc)) -> df
df %>% mutate(wrappedv = gsub("including<br>attempted assault","",wrappedv)) -> df
df %>% mutate(wrapped_name = gsub("<br>including attempted<br>assault","",wrapped_name)) -> df
df %>% mutate(label = gsub(" including attempted assault","",label)) -> df
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
#update the app data.
save.image(file = "./app/.RData")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
all_vars
all_vars[[2]]
all_vars[[2]][2]
all_vars[[2]][2]<-"Victim of violent crime"
all_vars[[2]]
#update the app data.
save.image(file = "./app/.RData")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
df<-readRDS("data/pdiv10.1.rds")
#police division colours
pdivcols=c("Argyll & West Dunbartonshire (L Division)"='#E41A1C',
"Ayrshire (U Division)"='#377EB8',
"Dumfries & Galloway (V Division)"='#4DAF4A',
"Edinburgh City (E Division)"='#984EA3',
"Fife (P Division)"='#FF7F00',
"Forth Valley (C Division)"='#FFFF33',
"Greater Glasgow (G Division)"='#A65628',
"Highlands & Islands (N Division)"='#F781BF',
"Lanarkshire (Q Division)"='#1B9E77',
"Lothians & Scottish Borders (J Division)"='#D95F02',
"North East (A Division)"='#7570B3',
"Renfrewshire & Inverclyde (K Division)"='#66A61E',
"Tayside (D Division)"='#E6AB02',
"National Average"='#000000')
#colours for overview page (national avg = black, and better/worse/none is included)
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#95fb71",
"Less Positive"="#fb7171")
#modebar icons to remove (these are the little buttons on the plots.)
modebar_remove <- c('hoverClosestCartesian','hoverCompareCartesian','zoom2d','pan2d','toggleSpikelines','select2d','lasso2d','zoomIn2d','zoomOut2d')
#app-user inputs. (these are the choices users will get to select from)
des_factor <- df %>% group_by(year) %>% summarise(des_f=first(des_fact)) #design factors
pdivis<-levels(factor(df$police_div)) #police divisions
years=levels(df$year) #years
currentyear=years[length(years)] #latest survey year
prevyear=years[length(years)-1] #previous survey year
firstyear=years[1] #first survey year
yn<-c("Yes","No") #yes no choices
View(df)
##################################################################################################################
#MAKE DATA APP-READY
#################
#this will be the data for the app.
#read in the information on each variable (shorter versions etc)
variable_info<-read.csv("data/variable_information.csv")
names(variable_info)
head(variable_info$variable)
names(df)
df %>% select(-c(label,ylabel,ptitle,name_trunc,reverse_coded, wrappedv,wrapped_name)) -> df
left_join(df,variable_info)
###############
#tidyup
###############
rm(list=ls())
df<-readRDS("data/pdiv10.1.rds")
#police division colours
pdivcols=c("Argyll & West Dunbartonshire (L Division)"='#E41A1C',
"Ayrshire (U Division)"='#377EB8',
"Dumfries & Galloway (V Division)"='#4DAF4A',
"Edinburgh City (E Division)"='#984EA3',
"Fife (P Division)"='#FF7F00',
"Forth Valley (C Division)"='#FFFF33',
"Greater Glasgow (G Division)"='#A65628',
"Highlands & Islands (N Division)"='#F781BF',
"Lanarkshire (Q Division)"='#1B9E77',
"Lothians & Scottish Borders (J Division)"='#D95F02',
"North East (A Division)"='#7570B3',
"Renfrewshire & Inverclyde (K Division)"='#66A61E',
"Tayside (D Division)"='#E6AB02',
"National Average"='#000000')
#colours for overview page (national avg = black, and better/worse/none is included)
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#95fb71",
"Less Positive"="#fb7171")
#modebar icons to remove (these are the little buttons on the plots.)
modebar_remove <- c('hoverClosestCartesian','hoverCompareCartesian','zoom2d','pan2d','toggleSpikelines','select2d','lasso2d','zoomIn2d','zoomOut2d')
des_factor <- df %>% group_by(year) %>% summarise(des_f=first(des_fact)) #design factors
pdivis<-levels(factor(df$police_div)) #police divisions
years=levels(df$year) #years
currentyear=years[length(years)] #latest survey year
prevyear=years[length(years)-1] #previous survey year
firstyear=years[1] #first survey year
yn<-c("Yes","No") #yes no choices
getnames<-function(string){
df %>%
filter(grepl(string,variable)) %>%
pull(name_trunc) %>%
unique() %>%
as.character()
}
View(df)
df %>% mutate(name_trunc = gsub(" including attempted assault","",name_trunc)) -> df
df %>% mutate(wrappedv = gsub(" including<br>attempted assault","",wrappedv)) -> df
df %>% mutate(wrapped_name = gsub("<br>including attempted<br>assault","",wrapped_name)) -> df
#variables/variable groupings
all_vars<-list('National Indicators'= getnames("PREVSURVEY|QS2AREA:|DCONF_03"),
'Rates of Crime Victimisation'=getnames("PREV"),
'Confidence in the Police'=getnames("POLCONF|RATPOL"),
'Attitudes to the Police'=getnames("POLOP|POLPRES"),
'Confidence in Scottish Criminal Justice System'=getnames("DCONF"),
'Perceptions of Crime Rates and Fear of Crime'=getnames("QS"),
'Perceptions of Local Crime'=getnames("QACO"),
'Perceptions of Local Community'=getnames("LCPEOP"),
'Worries of Crime Victimisation'=getnames("QWORR"),
'Worries of Being Harassed'=getnames("HWORR")
)
all_vars[[2]]
#now overwrite variable with more user-friendly input
df$variable<-df$name_trunc
df$variable
######## map data ##########
pd_latlon <- readRDS("data/pd_mapdata.RDS")
############ save Rdata to the app directory ############
ungroup(df) -> df
#update the app data.
save.image(file = "./app/.RData")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
load("app/.RData")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
load("app/.RData")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
df %>% filter(year!="2016-18*") -> df
###############
#tidyup
###############
rm(list=ls())
df<-readRDS("data/pdiv_v2.4.rds")
df %>% filter(year!="2016-18*") -> df
#police division colours
pdivcols=c("Argyll & West Dunbartonshire (L Division)"='#a6cee3',
"Ayrshire (U Division)"='#1f78b4',
"Dumfries & Galloway (V Division)"='#b2df8a',
"Edinburgh City (E Division)"='#33a02c',
"Fife (P Division)"='#fb9a99',
"Forth Valley (C Division)"='#e31a1c',
"Greater Glasgow (G Division)"='#fdbf6f',
"Highlands & Islands (N Division)"='#ff7f00',
"Lanarkshire (Q Division)"='#cab2d6',
"Lothians & Scottish Borders (J Division)"='#6a3d9a',
"North East (A Division)"='#d9d989',
"Renfrewshire & Inverclyde (K Division)"='#b15928',
"Tayside (D Division)"='#e627ac',
"National Average"='#000000')
#colours for overview page (national avg = black, and better/worse/none is included)
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#95fb71",
"Less Positive"="#fb7171")
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#6baed6",
"Less Positive"="#045a8d")
#modebar icons to remove (these are the little buttons on the plots.)
modebar_remove <- c('hoverClosestCartesian','hoverCompareCartesian','zoom2d','pan2d','toggleSpikelines','select2d','lasso2d','zoomIn2d','zoomOut2d')
des_factor <- df %>% group_by(year) %>% summarise(des_f=first(des_fact)) #design factors
pdivis<-levels(factor(df$police_div)) #police divisions
years=levels(df$year) #years
currentyear=years[length(years)] #latest survey year
prevyear=years[length(years)-1] #previous survey year
firstyear=years[1] #first survey year
yn<-c("Yes","No") #yes no choices
getnames<-function(string){
df %>%
filter(grepl(string,variable)) %>%
pull(name_trunc) %>%
unique() %>%
as.character()
}
#variables/variable groupings
all_vars<-list('National Indicators'= getnames("PREVSURVEY|QS2AREA:|DCONF_03"),
'Rates of Crime Victimisation'=getnames("PREV"),
'Confidence in the Police'=getnames("POLCONF|RATPOL"),
'Attitudes to the Police'=getnames("POLOP"),
'Police Presence'=getnames("COMPOL|POLPATR|POLPRES"),
'Police Contact'=getnames("QPCON"),
'Confidence in Scottish Criminal Justice System'=getnames("DCONF"),
'Perceptions of Crime Rates and Fear of Crime'=getnames("QS"),
'Perceptions of Local Crime'=getnames("QACO"),
'Perceptions of Local Community'=getnames("LCPEOP"),
'Worries of Crime Victimisation'=getnames("QWORR"),
'Worries of Being Harassed'=getnames("HWORR")
)
df %>% separate(variable,c("varcode","vars"),sep=":") %>%
select(police_div,wrappedv,year,varcode) %>%
left_join(df,.) -> df
#now overwrite variable with more user-friendly input
df$variable<-df$name_trunc
######## map data ##########
pd_latlon <- readRDS("data/pd_mapdata.RDS")
df %>% filter(year==currentyear) %>% filter(variable %in% all_vars[[1]]) %>%
group_by(police_div, variable) %>%
summarise(
percentage = first(percentage),
wrapped_name = first(wrapped_name)
) %>% mutate(
PDivName = police_div
) %>% ungroup %>% select(PDivName, variable, percentage) %>%
spread(., key=variable, value=percentage) %>%
left_join(pd_latlon@data, .) -> pd_latlon@data
############ save Rdata to the app directory ############
ungroup(df) -> df
#any thing with sample size of less than 50, remove.
df %>% mutate_at(vars(p,percentage,ci,low,high),funs(ifelse(samplesize<=50,NA,.))) -> df
source("data/overviewpage_data.R")
#update the app data.
save.image(file = "./app/.RData")
shiny::runApp(appDir="./app/")
###############
#tidyup
###############
rm(list=ls())
df<-readRDS("data/pdiv_v2.4.rds")
df %>% filter(year!="2016-18*") -> df
df <- droplevels(df)
#police division colours
pdivcols=c("Argyll & West Dunbartonshire (L Division)"='#a6cee3',
"Ayrshire (U Division)"='#1f78b4',
"Dumfries & Galloway (V Division)"='#b2df8a',
"Edinburgh City (E Division)"='#33a02c',
"Fife (P Division)"='#fb9a99',
"Forth Valley (C Division)"='#e31a1c',
"Greater Glasgow (G Division)"='#fdbf6f',
"Highlands & Islands (N Division)"='#ff7f00',
"Lanarkshire (Q Division)"='#cab2d6',
"Lothians & Scottish Borders (J Division)"='#6a3d9a',
"North East (A Division)"='#d9d989',
"Renfrewshire & Inverclyde (K Division)"='#b15928',
"Tayside (D Division)"='#e627ac',
"National Average"='#000000')
#colours for overview page (national avg = black, and better/worse/none is included)
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#95fb71",
"Less Positive"="#fb7171")
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#6baed6",
"Less Positive"="#045a8d")
#modebar icons to remove (these are the little buttons on the plots.)
modebar_remove <- c('hoverClosestCartesian','hoverCompareCartesian','zoom2d','pan2d','toggleSpikelines','select2d','lasso2d','zoomIn2d','zoomOut2d')
des_factor <- df %>% group_by(year) %>% summarise(des_f=first(des_fact)) #design factors
pdivis<-levels(factor(df$police_div)) #police divisions
years=levels(df$year) #years
currentyear=years[length(years)] #latest survey year
prevyear=years[length(years)-1] #previous survey year
firstyear=years[1] #first survey year
yn<-c("Yes","No") #yes no choices
getnames<-function(string){
df %>%
filter(grepl(string,variable)) %>%
pull(name_trunc) %>%
unique() %>%
as.character()
}
#variables/variable groupings
all_vars<-list('National Indicators'= getnames("PREVSURVEY|QS2AREA:|DCONF_03"),
'Rates of Crime Victimisation'=getnames("PREV"),
'Confidence in the Police'=getnames("POLCONF|RATPOL"),
'Attitudes to the Police'=getnames("POLOP"),
'Police Presence'=getnames("COMPOL|POLPATR|POLPRES"),
'Police Contact'=getnames("QPCON"),
'Confidence in Scottish Criminal Justice System'=getnames("DCONF"),
'Perceptions of Crime Rates and Fear of Crime'=getnames("QS"),
'Perceptions of Local Crime'=getnames("QACO"),
'Perceptions of Local Community'=getnames("LCPEOP"),
'Worries of Crime Victimisation'=getnames("QWORR"),
'Worries of Being Harassed'=getnames("HWORR")
)
df %>% separate(variable,c("varcode","vars"),sep=":") %>%
select(police_div,wrappedv,year,varcode) %>%
left_join(df,.) -> df
#now overwrite variable with more user-friendly input
df$variable<-df$name_trunc
######## map data ##########
pd_latlon <- readRDS("data/pd_mapdata.RDS")
df %>% filter(year==currentyear) %>% filter(variable %in% all_vars[[1]]) %>%
group_by(police_div, variable) %>%
summarise(
percentage = first(percentage),
wrapped_name = first(wrapped_name)
) %>% mutate(
PDivName = police_div
) %>% ungroup %>% select(PDivName, variable, percentage) %>%
spread(., key=variable, value=percentage) %>%
left_join(pd_latlon@data, .) -> pd_latlon@data
############ save Rdata to the app directory ############
ungroup(df) -> df
#any thing with sample size of less than 50, remove.
df %>% mutate_at(vars(p,percentage,ci,low,high),funs(ifelse(samplesize<=50,NA,.))) -> df
source("data/overviewpage_data.R")
#update the app data.
save.image(file = "./app/.RData")
shiny::runApp(appDir="./app/")
###############
#tidyup
###############
rm(list=ls())
df<-readRDS("data/pdiv_v2.4.rds")
#df %>% filter(year!="2016-18*") -> df
#df <- droplevels(df)
#police division colours
pdivcols=c("Argyll & West Dunbartonshire (L Division)"='#a6cee3',
"Ayrshire (U Division)"='#1f78b4',
"Dumfries & Galloway (V Division)"='#b2df8a',
"Edinburgh City (E Division)"='#33a02c',
"Fife (P Division)"='#fb9a99',
"Forth Valley (C Division)"='#e31a1c',
"Greater Glasgow (G Division)"='#fdbf6f',
"Highlands & Islands (N Division)"='#ff7f00',
"Lanarkshire (Q Division)"='#cab2d6',
"Lothians & Scottish Borders (J Division)"='#6a3d9a',
"North East (A Division)"='#d9d989',
"Renfrewshire & Inverclyde (K Division)"='#b15928',
"Tayside (D Division)"='#e627ac',
"National Average"='#000000')
#colours for overview page (national avg = black, and better/worse/none is included)
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#95fb71",
"Less Positive"="#fb7171")
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#6baed6",
"Less Positive"="#045a8d")
#modebar icons to remove (these are the little buttons on the plots.)
modebar_remove <- c('hoverClosestCartesian','hoverCompareCartesian','zoom2d','pan2d','toggleSpikelines','select2d','lasso2d','zoomIn2d','zoomOut2d')
des_factor <- df %>% group_by(year) %>% summarise(des_f=first(des_fact)) #design factors
pdivis<-levels(factor(df$police_div)) #police divisions
years=levels(df$year) #years
currentyear=years[length(years)] #latest survey year
prevyear=years[length(years)-1] #previous survey year
firstyear=years[1] #first survey year
yn<-c("Yes","No") #yes no choices
getnames<-function(string){
df %>%
filter(grepl(string,variable)) %>%
pull(name_trunc) %>%
unique() %>%
as.character()
}
#variables/variable groupings
all_vars<-list('National Indicators'= getnames("PREVSURVEY|QS2AREA:|DCONF_03"),
'Rates of Crime Victimisation'=getnames("PREV"),
'Confidence in the Police'=getnames("POLCONF|RATPOL"),
'Attitudes to the Police'=getnames("POLOP"),
'Police Presence'=getnames("COMPOL|POLPATR|POLPRES"),
'Police Contact'=getnames("QPCON"),
'Confidence in Scottish Criminal Justice System'=getnames("DCONF"),
'Perceptions of Crime Rates and Fear of Crime'=getnames("QS"),
'Perceptions of Local Crime'=getnames("QACO"),
'Perceptions of Local Community'=getnames("LCPEOP"),
'Worries of Crime Victimisation'=getnames("QWORR"),
'Worries of Being Harassed'=getnames("HWORR")
)
df %>% separate(variable,c("varcode","vars"),sep=":") %>%
select(police_div,wrappedv,year,varcode) %>%
left_join(df,.) -> df
#now overwrite variable with more user-friendly input
df$variable<-df$name_trunc
######## map data ##########
pd_latlon <- readRDS("data/pd_mapdata.RDS")
df %>% filter(year==currentyear) %>% filter(variable %in% all_vars[[1]]) %>%
group_by(police_div, variable) %>%
summarise(
percentage = first(percentage),
wrapped_name = first(wrapped_name)
) %>% mutate(
PDivName = police_div
) %>% ungroup %>% select(PDivName, variable, percentage) %>%
spread(., key=variable, value=percentage) %>%
left_join(pd_latlon@data, .) -> pd_latlon@data
############ save Rdata to the app directory ############
ungroup(df) -> df
#any thing with sample size of less than 50, remove.
df %>% mutate_at(vars(p,percentage,ci,low,high),funs(ifelse(samplesize<=50,NA,.))) -> df
source("data/overviewpage_data.R")
#update the app data.
save.image(file = "./app/.RData")
####################### RUN THE APP ############################
load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
load("app/.RData")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
load("app/.RData")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
