"Dumfries & Galloway (V Division)"='#4DAF4A',
"Edinburgh City (E Division)"='#984EA3',
"Fife (P Division)"='#FF7F00',
"Forth Valley (C Division)"='#FFFF33',
"Greater Glasgow (G Division)"='#A65628',
"Highlands & Islands (N Division)"='#F781BF',
"Lanarkshire (Q Division)"='#1B9E77',
"Lothians & Scottish Borders (J Division)"='#D95F02',
"North East (A Division)"='#7570B3',
"Renfrewshire & Inverclyde (K Division)"='#66A61E',
"Tayside (D Division)"='#E6AB02',
"National Average"='#000000')
#colours for overview page (national avg = black, and better/worse/none is included)
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#95fb71",
"Less Positive"="#fb7171")
#modebar icons to remove (these are the little buttons on the plots.)
modebar_remove <- c('hoverClosestCartesian','hoverCompareCartesian','zoom2d','pan2d','toggleSpikelines','select2d','lasso2d','zoomIn2d','zoomOut2d')
#app-user inputs. (these are the choices users will get to select from)
des_factor <- df %>% group_by(year) %>% summarise(des_f=first(des_fact)) #design factors
pdivis<-levels(factor(df$police_div)) #police divisions
years=levels(df$year) #years
currentyear=years[length(years)] #latest survey year
prevyear=years[length(years)-1] #previous survey year
firstyear=years[1] #first survey year
yn<-c("Yes","No") #yes no choices
getnames<-function(string){
df %>%
filter(grepl(string,variable)) %>%
pull(name_trunc) %>%
unique() %>%
as.character()
}
#variables/variable groupings
all_vars<-list('National Indicators'= getnames("PREVSURVEY|QS2AREA:|DCONF_03"),
'Rates of Crime Victimisation'=getnames("PREV"),
'Confidence in the Police'=getnames("POLCONF|RATPOL"),
'Attitudes to the Police'=getnames("POLOP|POLPRES"),
'Confidence in Scottish Criminal Justice System'=getnames("DCONF"),
'Perceptions of Crime Rates and Safety'=getnames("QS"),
'Perceptions of Local Crime'=getnames("QACO"),
'Perceptions of Local People'=getnames("LCPEOP"),
'Worries of Crime Victimisation'=getnames("QWORR"),
'Worries of Being Harassed'=getnames("HWORR")
)
#now overwrite variable with more user-friendly input
df$variable<-df$name_trunc
######## map data ##########
pd_latlon <- readRDS("data/pd_mapdata.RDS")
############ save Rdata to the app directory ############
ungroup(df) -> df
#update the app data.
save.image(file = "./app/.RData")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
View(df)
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
df %>% filter(police_div=="National Average",
year %in% c(currentyear,prevyear),
variable %in% all_vars[[1]]) %>%
group_by(variable) %>%
summarise(
current_percentage = percentage[which(year==currentyear)],
current_ci = ci[which(year==currentyear)],
p_diff=abs(diff(p)),
c=sqrt(sum(ci^2)),
p_signif=p_diff>c,
rev_coded=first(reverse_coded),
thisyear = ifelse(p_signif==TRUE & year[which(p==min(p))]==currentyear, "down",
ifelse(p_signif==TRUE & year[which(p==min(p))]!=currentyear, "up",
"same")),
thisyear_direction = factor(ifelse(rev_coded==1 & thisyear=="up","down",
ifelse(rev_coded==1 & thisyear=="down","up", thisyear))),
text1 = fct_recode(thisyear_direction, "IMPROVING"="up","WORSENING"="down","MAINTAINING"="same"),
text2 = paste0(round(current_percentage,1),"% ",text1)
) %>% select(variable, current_percentage, current_ci, thisyear,text2) -> image_data
#filter to each NI
image_data %>% filter(grepl("Confident",variable)) -> ni_conf_data
image_data %>% filter(grepl("Victim",variable)) -> ni_crime_data
image_data %>% filter(grepl("Perceived",variable)) -> ni_perc_data
View(ni_conf_data)
View(ni_conf_data)
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
df<-readRDS("data/pdiv9.7.rds")
#packages needed
require(tidyr)
require(dplyr)
require(ggplot2)
require(magrittr)
require(plotly)
df<-readRDS("data/pdiv9.7.rds")
#police division colours
pdivcols=c("Argyll & West Dunbartonshire (L Division)"='#E41A1C',
"Ayrshire (U Division)"='#377EB8',
"Dumfries & Galloway (V Division)"='#4DAF4A',
"Edinburgh City (E Division)"='#984EA3',
"Fife (P Division)"='#FF7F00',
"Forth Valley (C Division)"='#FFFF33',
"Greater Glasgow (G Division)"='#A65628',
"Highlands & Islands (N Division)"='#F781BF',
"Lanarkshire (Q Division)"='#1B9E77',
"Lothians & Scottish Borders (J Division)"='#D95F02',
"North East (A Division)"='#7570B3',
"Renfrewshire & Inverclyde (K Division)"='#66A61E',
"Tayside (D Division)"='#E6AB02',
"National Average"='#000000')
#colours for overview page (national avg = black, and better/worse/none is included)
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#95fb71",
"Less Positive"="#fb7171")
#modebar icons to remove (these are the little buttons on the plots.)
modebar_remove <- c('hoverClosestCartesian','hoverCompareCartesian','zoom2d','pan2d','toggleSpikelines','select2d','lasso2d','zoomIn2d','zoomOut2d')
des_factor <- df %>% group_by(year) %>% summarise(des_f=first(des_fact)) #design factors
pdivis<-levels(factor(df$police_div)) #police divisions
years=levels(df$year) #years
currentyear=years[length(years)] #latest survey year
prevyear=years[length(years)-1] #previous survey year
firstyear=years[1] #first survey year
yn<-c("Yes","No") #yes no choices
getnames<-function(string){
df %>%
filter(grepl(string,variable)) %>%
pull(name_trunc) %>%
unique() %>%
as.character()
}
#variables/variable groupings
all_vars<-list('National Indicators'= getnames("PREVSURVEY|QS2AREA:|DCONF_03"),
'Rates of Crime Victimisation'=getnames("PREV"),
'Confidence in the Police'=getnames("POLCONF|RATPOL"),
'Attitudes to the Police'=getnames("POLOP|POLPRES"),
'Confidence in Scottish Criminal Justice System'=getnames("DCONF"),
'Perceptions of Crime Rates and Fear of Crime'=getnames("QS"),
'Perceptions of Local Crime'=getnames("QACO"),
'Perceptions of Local Community'=getnames("LCPEOP"),
'Worries of Crime Victimisation'=getnames("QWORR"),
'Worries of Being Harassed'=getnames("HWORR")
)
#now overwrite variable with more user-friendly input
df$variable<-df$name_trunc
######## map data ##########
pd_latlon <- readRDS("data/pd_mapdata.RDS")
############ save Rdata to the app directory ############
ungroup(df) -> df
#update the app data.
save.image(file = "./app/.RData")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
###############
#tidyup
###############
rm(list=ls())
#packages needed
require(tidyr)
require(dplyr)
require(ggplot2)
require(magrittr)
require(plotly)
#load in functions
df<-readRDS("data/pdiv10.1.rds")
#police division colours
pdivcols=c("Argyll & West Dunbartonshire (L Division)"='#E41A1C',
"Ayrshire (U Division)"='#377EB8',
"Dumfries & Galloway (V Division)"='#4DAF4A',
"Edinburgh City (E Division)"='#984EA3',
"Fife (P Division)"='#FF7F00',
"Forth Valley (C Division)"='#FFFF33',
"Greater Glasgow (G Division)"='#A65628',
"Highlands & Islands (N Division)"='#F781BF',
"Lanarkshire (Q Division)"='#1B9E77',
"Lothians & Scottish Borders (J Division)"='#D95F02',
"North East (A Division)"='#7570B3',
"Renfrewshire & Inverclyde (K Division)"='#66A61E',
"Tayside (D Division)"='#E6AB02',
"National Average"='#000000')
#colours for overview page (national avg = black, and better/worse/none is included)
overview_cols=c(pdivcols,
"No difference"="#BDBDBD",
"More Positive"="#95fb71",
"Less Positive"="#fb7171")
#modebar icons to remove (these are the little buttons on the plots.)
modebar_remove <- c('hoverClosestCartesian','hoverCompareCartesian','zoom2d','pan2d','toggleSpikelines','select2d','lasso2d','zoomIn2d','zoomOut2d')
des_factor <- df %>% group_by(year) %>% summarise(des_f=first(des_fact)) #design factors
pdivis<-levels(factor(df$police_div)) #police divisions
years=levels(df$year) #years
currentyear=years[length(years)] #latest survey year
prevyear=years[length(years)-1] #previous survey year
firstyear=years[1] #first survey year
yn<-c("Yes","No") #yes no choices
getnames<-function(string){
df %>%
filter(grepl(string,variable)) %>%
pull(name_trunc) %>%
unique() %>%
as.character()
}
#variables/variable groupings
all_vars<-list('National Indicators'= getnames("PREVSURVEY|QS2AREA:|DCONF_03"),
'Rates of Crime Victimisation'=getnames("PREV"),
'Confidence in the Police'=getnames("POLCONF|RATPOL"),
'Attitudes to the Police'=getnames("POLOP|POLPRES"),
'Confidence in Scottish Criminal Justice System'=getnames("DCONF"),
'Perceptions of Crime Rates and Fear of Crime'=getnames("QS"),
'Perceptions of Local Crime'=getnames("QACO"),
'Perceptions of Local Community'=getnames("LCPEOP"),
'Worries of Crime Victimisation'=getnames("QWORR"),
'Worries of Being Harassed'=getnames("HWORR")
)
#now overwrite variable with more user-friendly input
df$variable<-df$name_trunc
######## map data ##########
pd_latlon <- readRDS("data/pd_mapdata.RDS")
############ save Rdata to the app directory ############
ungroup(df) -> df
#update the app data.
save.image(file = "./app/.RData")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
####################### RUN THE APP ############################
#load("app/.RData")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
home_page <-
div(id="home",
# text summary of SCJS.
tags$p("The Scottish Crime and Justice Survey (SCJS) is a large-scale social survey which asks people about their experiences and perceptions of crime. The survey is important because it provides a picture of crime in Scotland, including crimes that haven't been reported to/recorded by the police and captured in police recorded crime statistics. More information and the entire questionnaire can be found on ",tags$a(target="_blank",tags$ins("the SCJS publication page."),href="http://www.gov.scot/Topics/Statistics/Browse/Crime-Justice/crime-and-justice-survey/publications")),
div(id="home-toptext",
#Button links to other tabs. (see server_home.R)
tags$h3("Explore the SCJS data"),
tags$p("Using the tools below, you can view results for various sections of the SCJS, including rates of crime victimisation, confidence in/attitudes to the police, and perceptions of crime. Different tools allow you to visualise the data in different ways, from trends over time to breakdowns of police divisions relative to the national average."),
div(class="home_allbuttons",
actionLink("link_divisions",
div(class="home-button",
div(class="button-head",
tags$h4("Division Breakdowns"),
tags$img(src="divisionicons.png")),
tags$p("See how police divisions have been performing relative to the National Average")
)
),
actionLink("link_compare",
div(class="home-button",
div(class="button-head",
tags$h4("Comparison Tool"),
tags$img(src="comparisonicons.png")),
tags$p("Compare results between divisions and across survey years according to the SCJS method for testing statistical significance.")
)
)
),
div(class="home_allbuttons",
actionLink("link_trends",
div(class="home-button",
div(class="button-head",
tags$h4("Trends"),
tags$img(src="trendsicons.png")),
tags$p("See results of the SCJS over time.")
)
),
actionLink("link_tables",
div(class="home-button",
div(class="button-head",
tags$h4("Tables"),
tags$img(src="tablesicons.png")),
tags$p("Just want numbers? Download tables of percentages and sample sizes for all variables included here")
)
)
)
),
div(id="ni-text",
#leaflet map - see server_map.R
div(id="map",
selectInput("map_var",label=NULL,choices=all_vars[[1]],selected=all_vars[[1]][1],multiple=F),
leafletOutput("pdiv_map",height="600px")
)
),
tags$p("The results here represent percentages of responses to different questions in the questionnaire. These percentages are weighted for the unequal probability of selection for interview caused by the sample design. The visualisations included here allow for these results to be broken down by the Police Divisions in which respondents lived at the time of interview. Although this can show how experiences/attitudes vary between Police Divisions, there may be complex explanations underlying these differences. For example, more urban areas may contain more deprived areas, a greater proportion of younger adults, more social renters and so on – all of which may influence results for that Police Division rather than or in addition to factors like the performance of the police. In that sense, whilst the visualisations here are helpful for highlighting how views and experiences differ across Scotland, they do not necessarily explain the reasons for such differences or indicate that one area is better than another."),
tags$p("Additionally, it is important to consider the absolute results as well as any relative differences or changes. For example, the vast majority of people may hold a positive view, even if this has fallen a little over time or is lower in one area than another. This is important point to note when interpreting and summarising findings.")
)
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
shiny::runApp(appDir="./app/")
